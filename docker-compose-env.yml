version: '3'

#项目所需环境组件，启动后才可启动项目
#docker compose -f docker-compose-env.yml up -d
#所有绑定目录放在/bind/conf/*、/bind/data/*、/bind/logs/*内

services:

#基础组件

  #Etcd注册中心【mkdir -p /bind/data/etcd】
  etcd:
    image: bitnami/etcd:latest
    container_name: goms_etcd
    ports:
      - 2379:2379
      - 2380:2380
    environment:
      TZ: Asia/Shanghai
      ALLOW_NONE_AUTHENTICATION: yes
      ETCD_ADVERTISE_CLIENT_URLS: http://goms_etcd:2379
    privileged: true
    restart: always
    volumes:
      - /bind/data/etcd:/bitnami/etcd"
    networks:
      - goms_net

  #DTM分布式事务
  dtm:
    image: yedf/dtm:latest
    container_name: goms_dtm
    ports:
      - 36789:36789
      - 36790:36790
    environment:
      TZ: Asia/Shanghai
      STORE_DRIVER: mysql
      STORE_HOST: goms_mysql
      STORE_USER: root
      STORE_PASSWORD: 840f98f283c7e914f98a87c3f30b3f2f
      STORE_PORT: 3306
      MICRO_SERVICE_DRIVER: dtm-driver-gozero
      MICRO_SERVICE_TARGET: etcd://goms_etcd:2379/dtmservice
      MICRO_SERVICE_END_POINT: goms_dtm:36790
    privileged: true
    restart: always
    networks:
      - goms_net

  #Redis缓存【mkdir -p /bind/data/redis】
  redis:
    image: redis:7.0.9
    container_name: goms_redis
    ports:
      - 6379:6379
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /bind/data/redis:/data
    command: "redis-server --requirepass 840f98f283c7e914f98a87c3f30b3f2f --appendonly yes"
    privileged: true
    restart: always
    networks:
      - goms_net

  #MySQL数据库【mkdir -p /bind/data/mysql /bind/conf/mysql】
  mysql:
    image: mysql:8.0.32
    container_name: goms_mysql
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 840f98f283c7e914f98a87c3f30b3f2f
    ports:
      - 3306:3306
    volumes:
      - /bind/data/mysql:/var/lib/mysql
    command:
      #修改MySQL8.0的密码策略
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
    privileged: true
    restart: always
    networks:
      - goms_net

  #ZooKeeper注册中心【mkdir -p /bind/data/zookeeper】
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: goms_zookeeper
    user: root
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
      TZ: Asia/Shanghai
    volumes:
      - /bind/data/zookeeper:/bitnami/zookeeper
    ports:
      - 2181:2181
    privileged: true
    restart: always
    networks:
      - goms_net

  #Kafka消息队列【mkdir -p /bind/data/kafka】
  kafka:
    image: bitnami/kafka:3.4
    container_name: goms_kafka
    user: root
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://goms_kafka:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: goms_zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      TZ: Asia/Shanghai
    volumes:
      - /bind/data/kafka:/bitnami/kafka
    privileged: true
    restart: always
    networks:
      - goms_net
    depends_on:
      - zookeeper

#监控组件

  #RedisManager监控Redis【mkdir -p /bind/conf/redismanager】
  redismanager:
    image: lukiya/redismanager:latest
    container_name: goms_redismanager
    ports:
      - 16379:16379
    volumes:
      - /bind/conf/redismanager/Servers.json:/app/Servers.json
    restart: always
    networks:
      - goms_net
    depends_on:
      - redis

  #AsynqMon监控Asynq
  asynqmon:
    image: hibiken/asynqmon:latest
    container_name: goms_asynqmon
    ports:
      - 9080:8080
    command:
      - '--redis-addr=goms_redis:6379'
      - '--redis-password=840f98f283c7e914f98a87c3f30b3f2f'
    restart: always
    networks:
      - goms_net
    depends_on:
      - redis
      
  #ElasticSearch搜索存储引擎【mkdir -p /bind/conf/elasticsearch/plugins /bind/data/elasticsearch】
  #中文分词【./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.17.7/elasticsearch-analysis-ik-7.17.7.zip】
  elasticsearch:
    image: elasticsearch:7.17.7
    container_name: goms_elasticsearch
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      TZ: Asia/Shanghai
    volumes:
      - /bind/conf/elasticsearch/plugins:/usr/share/elasticsearch/plugins
      - /bind/data/elasticsearch:/usr/share/elasticsearch/data
    restart: always
    ports:
    - 9200:9200
    - 9300:9300
    networks:
      - goms_net

  #Kibana查看ElasticSearch数据
  kibana:
    image: kibana:7.17.7
    container_name: goms_kibana
    environment:
      elasticsearch.hosts: http://goms_elasticsearch:9200
      i18n.locale: zh-CN
      TZ: Asia/Shanghai
    restart: always
    networks:
      - goms_net
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
      
  #FileBeat收集业务数据【mkdir -p /bind/conf/filebeat】【vim /bind/conf/filebeat/filebeat.yml】
  filebeat:
    image: elastic/filebeat:7.17.7
    container_name: goms_filebeat
    environment:
      TZ: Asia/Shanghai
    user: root
    restart: always
    entrypoint: filebeat -e --strict.perms=false
    volumes:
      - /bind/conf/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      #Docker
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #Nginx
      - /bind/logs/nginx:/var/log/nginx:ro
    networks:
      - goms_net
    depends_on:
      - kibana
      - elasticsearch
      
  #GoStash消费kafka中的数据
  gostash:
    image: kevinwan/go-stash:1.0.8
    container_name: goms_gostash
    environment:
      TZ: Asia/Shanghai
    restart: always
    volumes:
      - /bind/conf/gostash:/app/etc
    networks:
      - goms_net
    depends_on:
      - kafka
      - elasticsearch
      
  #Jaeger链路追踪
  jaeger:
    image: jaegertracing/all-in-one:1.42.0
    container_name: goms_jaeger
    restart: always
    ports:
      - 14268:14268 #API
      - 16686:16686 #UI
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://goms_elasticsearch:9200
    networks:
      - goms_net
    depends_on:
      - elasticsearch
      
  #Prometheus监控【mkdir -p /bind/data/prometheus】【vim /bind/conf/prometheus/prometheus.yml】
  prometheus:
    image: bitnami/prometheus:2.42.0
    container_name: goms_prometheus
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /bind/conf/prometheus/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
      - /bind/data/prometheus:/opt/bitnami/prometheus/data
    restart: always
    user: root
    ports:
      - 9090:9090
    networks:
      - goms_net

  #Grafana查看Prometheus数据【mkdir -p /bind/data/grafana】
  #初始用户名&密码admin
  grafana:
    image: grafana/grafana:9.4.3
    container_name: goms_grafana
    hostname: grafana
    user: root
    environment:
      TZ: Asia/Shanghai
    restart: always
    volumes:
        - /bind/data/grafana:/var/lib/grafana
    ports:
        - 3000:3000
    networks:
        - goms_net
    depends_on:
      - prometheus

networks:
  goms_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

